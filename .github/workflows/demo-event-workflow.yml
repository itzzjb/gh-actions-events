name: Events Demo
run-name: Events Demo
# We only need to only run this workflow only when we opened or close a pull request + We set workflow_dispatch, so we can run it manually
# So, we need to use action types: opened, edited specified in the on key
on:
  pull_request:
    # We can list the types as -> types: [opened, edited] or as below
    types:
      - opened
      - closed
    branches:
      - master # This will run the workflow when the pull request is opened or closed on the master branch
  # Notice that even there are no types, we write as workflow_dispatch: (with semi-colon)
  workflow_dispatch:
  push:
    # By specifying branches, we can limit the workflow to run only when the push event occurs on following branches
    branches:
      - master
      - dev-* # This will run the workflow when the push event occurs on branches that start with dev-
      - feat/** # This will run the workflow when the push event occurs on branches that start with feat/
      # The difference of * and ** is that * matches any character except / and ** matches any character including /
    # branches-ignore:
    #   - "demo" # This will not run the workflow when a push event occurs on the demo branch
    paths:
      - ".github/**" # This will run the workflow only when the push event occurs on the .github directory
    # paths-ignore:
    #   - "public/**" # This will not run the workflow when a push event occurs on the public directory
jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Output event data
        run: echo "${{ toJSON(github.event) }}"
      - name: Get code
        uses: actions/checkout@v3
      - name: Install dependencies
        run: npm ci
      - name: Test code
        run: npm run test
      - name: Build code
        run: npm run build
      - name: Deploy project
        run: echo "Deploying..."
# You can only have one of branches or branches-ignore, not both
# You can only have one of paths or paths-ignore, not both
